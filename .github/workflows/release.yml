name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Például: v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux 32-bit dependencies
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install gcc-multilib

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename and store binary
        run: |
          mkdir dist
          BIN_NAME="rsa_tool-${{ matrix.target }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          cp target/${{ matrix.target }}/release/rsa_tool dist/$BIN_NAME
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rsa_tool-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
